generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  email String @unique @db.VarChar(50)
  hash  String

  ownedBooks    Book[] @relation("owner")
  borrowedBooks Book[] @relation("holder")

  @@map("users")
}

model Book {
  id          Int       @id @default(autoincrement())
  isbn        String    @db.VarChar(30)
  title       String    @db.VarChar(200)
  year        Int
  publisher   String    @db.VarChar(50)
  synopsis    String?
  createdAt   DateTime  @default(now())
  withdrawnAt DateTime?

  ownerId Int
  owner   User @relation("owner", fields: [ownerId], references: [id])

  holderId Int?
  holder   User? @relation("holder", fields: [holderId], references: [id])

  authorId Int    @unique
  author   Author @relation(fields: [authorId], references: [id])

  genreId Int   @unique
  genre   Genre @relation(fields: [genreId], references: [id])

  coverId Int   @unique
  cover   Cover @relation(fields: [coverId], references: [id])

  @@map("books")
}

model Author {
  id        Int     @id @default(autoincrement())
  firstName String? @db.VarChar(30)
  lastName  String  @db.VarChar(60)

  Book Book?

  @@map("authors")
}

model Genre {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(30)

  Book Book?

  @@map("genres")
}

model Cover {
  id        Int    @id @default(autoincrement())
  imageName String @db.VarChar(30)
  imageType String @db.VarChar(20)
  imageData Bytes

  Book Book?

  @@map("covers")
}
